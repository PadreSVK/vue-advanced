/* tslint:disable */
/* eslint-disable */
/**
 * RestApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    ClaimRequest,
    ClaimRequestFromJSON,
    ClaimRequestToJSON,
} from '../models';

export interface ApiClaimAddClaimPostRequest {
    claimRequest?: ClaimRequest;
}

export interface ApiClaimAddOrUpdateClaimPostRequest {
    claimRequest?: ClaimRequest;
}

export interface ApiClaimRemoveClaimPostRequest {
    claimRequest?: ClaimRequest;
}

/**
 * 
 */
export class ClaimApi extends runtime.BaseAPI {

    /**
     */
    async apiClaimAddClaimPostRaw(requestParameters: ApiClaimAddClaimPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/Claim/AddClaim`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ClaimRequestToJSON(requestParameters.claimRequest),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiClaimAddClaimPost(requestParameters: ApiClaimAddClaimPostRequest, initOverrides?: RequestInit): Promise<void> {
        await this.apiClaimAddClaimPostRaw(requestParameters, initOverrides);
    }

    /**
     */
    async apiClaimAddOrUpdateClaimPostRaw(requestParameters: ApiClaimAddOrUpdateClaimPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/Claim/AddOrUpdateClaim`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ClaimRequestToJSON(requestParameters.claimRequest),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiClaimAddOrUpdateClaimPost(requestParameters: ApiClaimAddOrUpdateClaimPostRequest, initOverrides?: RequestInit): Promise<void> {
        await this.apiClaimAddOrUpdateClaimPostRaw(requestParameters, initOverrides);
    }

    /**
     */
    async apiClaimRemoveClaimPostRaw(requestParameters: ApiClaimRemoveClaimPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/Claim/RemoveClaim`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ClaimRequestToJSON(requestParameters.claimRequest),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiClaimRemoveClaimPost(requestParameters: ApiClaimRemoveClaimPostRequest, initOverrides?: RequestInit): Promise<void> {
        await this.apiClaimRemoveClaimPostRaw(requestParameters, initOverrides);
    }

}
