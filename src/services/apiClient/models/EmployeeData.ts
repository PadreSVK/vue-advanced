/* tslint:disable */
/* eslint-disable */
/**
 * RestApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PositionEnum,
    PositionEnumFromJSON,
    PositionEnumFromJSONTyped,
    PositionEnumToJSON,
} from './';

/**
 * 
 * @export
 * @interface EmployeeData
 */
export interface EmployeeData {
    /**
     * 
     * @type {number}
     * @memberof EmployeeData
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof EmployeeData
     */
    firstName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof EmployeeData
     */
    lastName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof EmployeeData
     */
    prefix?: string | null;
    /**
     * 
     * @type {PositionEnum}
     * @memberof EmployeeData
     */
    position?: PositionEnum;
    /**
     * 
     * @type {string}
     * @memberof EmployeeData
     */
    picture?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof EmployeeData
     */
    birthDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof EmployeeData
     */
    hireDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof EmployeeData
     */
    emailAddress?: string | null;
    /**
     * 
     * @type {string}
     * @memberof EmployeeData
     */
    phoneNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof EmployeeData
     */
    notes?: string | null;
    /**
     * 
     * @type {string}
     * @memberof EmployeeData
     */
    address?: string | null;
    /**
     * 
     * @type {string}
     * @memberof EmployeeData
     */
    state?: string | null;
    /**
     * 
     * @type {string}
     * @memberof EmployeeData
     */
    city?: string | null;
}

export function EmployeeDataFromJSON(json: any): EmployeeData {
    return EmployeeDataFromJSONTyped(json, false);
}

export function EmployeeDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmployeeData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'firstName': !exists(json, 'firstName') ? undefined : json['firstName'],
        'lastName': !exists(json, 'lastName') ? undefined : json['lastName'],
        'prefix': !exists(json, 'prefix') ? undefined : json['prefix'],
        'position': !exists(json, 'position') ? undefined : PositionEnumFromJSON(json['position']),
        'picture': !exists(json, 'picture') ? undefined : json['picture'],
        'birthDate': !exists(json, 'birthDate') ? undefined : (new Date(json['birthDate'])),
        'hireDate': !exists(json, 'hireDate') ? undefined : (new Date(json['hireDate'])),
        'emailAddress': !exists(json, 'emailAddress') ? undefined : json['emailAddress'],
        'phoneNumber': !exists(json, 'phoneNumber') ? undefined : json['phoneNumber'],
        'notes': !exists(json, 'notes') ? undefined : json['notes'],
        'address': !exists(json, 'address') ? undefined : json['address'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'city': !exists(json, 'city') ? undefined : json['city'],
    };
}

export function EmployeeDataToJSON(value?: EmployeeData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'firstName': value.firstName,
        'lastName': value.lastName,
        'prefix': value.prefix,
        'position': PositionEnumToJSON(value.position),
        'picture': value.picture,
        'birthDate': value.birthDate === undefined ? undefined : (value.birthDate.toISOString()),
        'hireDate': value.hireDate === undefined ? undefined : (value.hireDate.toISOString()),
        'emailAddress': value.emailAddress,
        'phoneNumber': value.phoneNumber,
        'notes': value.notes,
        'address': value.address,
        'state': value.state,
        'city': value.city,
    };
}

